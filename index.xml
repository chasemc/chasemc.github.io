<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic on Academic</title>
    <link>/</link>
    <description>Recent content in Academic on Academic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0500</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Interactive Pong in R</title>
      <link>/project/posng/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/posng/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-r cars&#34;&gt;  summary(cars)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;a&amp;lt;-1+1
print(a)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pong</title>
      <link>/post/pong/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/pong/</guid>
      <description>&lt;p&gt;I am giving a talk about Shiny soon, &lt;a href=&#34;https://chasemc.github.io/IDBac&#34;&gt;specifically an app I recently created&lt;/a&gt;, and part of this will include time for attendees to work on a Shiny app on their own or in groups. There are &lt;a href=&#34;https://shiny.rstudio.com/gallery&#34;&gt;plenty&lt;/a&gt; of sample projects for Shiny but I wanted to do something new-ish.&lt;/p&gt;
&lt;p&gt;Something I had wondered for awhile was why there weren’t many games (however simple!) written in R. After awhile of researching, two recent games seemed the best examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The best I’ve seen is &lt;a href=&#34;https://deanattali.com/blog/shiny-game-lightsout/&#34;&gt;Lights Out&lt;/a&gt; by Dean Attali, which is based in Shiny and incorporates interactivity, with pushing lights on and off within a puzzle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second isn’t quite a game, but made it part-way with a &lt;a href=&#34;https://www.r-bloggers.com/r-cade-games-simulating-the-legendary-game-of-pong&#34;&gt;simulation of pong&lt;/a&gt; by Peter Prevos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I chose GGVis to keep on with my goal of getting better with tidyverse but also, and more importantly, because it was built to play well with Shiny.&lt;/p&gt;
&lt;p&gt;The first challenge is the plot itself, we prefer a blank workspace (no axes or grids). But the player will need to see boundary-lines for the top, right and bottom sides.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;shiny&amp;quot;)
library(&amp;quot;dplyr&amp;quot;)
library(&amp;quot;ggvis&amp;quot;)

boundaries &amp;lt;- tibble(x = c(0, 50, 50, 0), y = c(0, 0, 50, 50))

ggvis(x = ~x, y = ~y) %&amp;gt;% 
  layer_paths(data=boundaries) %&amp;gt;% 
  scale_numeric( &amp;quot;x&amp;quot;, domain = c(0,50)) %&amp;gt;% 
  scale_numeric( &amp;quot;y&amp;quot;, domain = c(0,50)) %&amp;gt;%
  hide_axis(scale = &amp;quot;x&amp;quot;) %&amp;gt;%
  hide_axis(scale = &amp;quot;y&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Eventually we will associate the plot to a UI element via&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggvisOutput(&amp;quot;p&amp;quot;)

and 

ggvis(x = ~x, y = ~y) %&amp;gt;% 
  ... %&amp;gt;% 
   bind_shiny(&amp;quot;p&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The harder part was getting the key-bindings to work, but it’s really not so bad. There are key-bindings in GGVis, but they weren’t working all that great for the needed purpose here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# The following code was modified based on https://stackoverflow.com/questions/24973549/r-shiny-key-input-binding
    tags$style(type=&amp;quot;text/css&amp;quot;, &amp;quot;.recalculating {opacity: 1.0;}&amp;quot;),
    tags$script(&amp;#39;$(document).on(&amp;quot;keydown&amp;quot;, function (e) {
                Shiny.onInputChange(&amp;quot;mydata&amp;quot;, [e.which, Math.random()]  );
                });&amp;#39;)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Math.random() above is important, as shiny will only recognize the first keystroke of the same type (down, down will only register as one down). By including Math.random() all repetitive keystrokes are returned.&lt;/p&gt;
&lt;p&gt;Then we look for the pressed key with &lt;code&gt;input$mydata&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Update paddle position based on keyboard input  
              # Key map  
                 # left  = 37
                 # right = 39
                 # up ter   = 38
                 # down  = 40

  observeEvent(input$mydata,{
    if((is.null(input$mydata))){
      
       playerObjectInitial}else{
          
          if(input$mydata[1] == 37){
            # left arrow key is empty
          }else if(input$mydata[1] == 39){
            # right arrow key is empty
          }else if(input$mydata[1] == 38 &amp;amp;&amp;amp; max(paddleHeight$y) &amp;lt; ymax - paddleSpeed){
            paddleHeight &amp;lt;&amp;lt;- paddleHeight %&amp;gt;% mutate(y=y+paddleSpeed)
          }else if(input$mydata[1] == 40 &amp;amp;&amp;amp; min(paddleHeight$y) &amp;gt; ymin + paddleSpeed){
            paddleHeight &amp;lt;&amp;lt;-   paddleHeight %&amp;gt;% mutate(y=y-paddleSpeed)
          }
     }
  })&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>IDBac: A Shiny App to Analyze Bacterial Fingerprints and Aid in the Discovery of Potential New Antibiotics</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0600</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
