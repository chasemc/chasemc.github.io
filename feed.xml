<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://chasemc.github.io/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0500</lastBuildDate>
    
        <atom:link href="https://chasemc.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://chasemc.github.io/home/hero/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 -0500</pubDate>
      
      <guid>https://chasemc.github.io/home/hero/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://chasemc.github.io/home/about/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/home/about/</guid>
      <description>

&lt;h1 id=&#34;biography&#34;&gt;Biography&lt;/h1&gt;

&lt;p&gt;I am currently a PhD candidate at the University of Illinois at Chicago where I am creating a platform, called &lt;a href=&#34;https://chasemc.github.io/IDBac&#34; target=&#34;_blank&#34;&gt;IDBac&lt;/a&gt;, to make finding new medicines from bacteria a little less serendipitous. This has led to an unbelievable and exciting education in Natural Product Discovery, Mass Spectromety, and Microbial Biosynthesis. I have been fortunate to become certified in Dry-Suit SCUBA and had the opportunity to collect samples in such places as the remote fjords of Iceland. My R posts and great content from the broader R community can be found at &lt;a href=&#34;https://www.r-bloggers.com&#34; target=&#34;_blank&#34;&gt;R-Bloggers.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Selected Publications</title>
      <link>https://chasemc.github.io/home/publications_selected/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 -0500</pubDate>
      
      <guid>https://chasemc.github.io/home/publications_selected/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recent Publications</title>
      <link>https://chasemc.github.io/home/publications/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 -0500</pubDate>
      
      <guid>https://chasemc.github.io/home/publications/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recent &amp; Upcoming Talks</title>
      <link>https://chasemc.github.io/home/talks/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/home/talks/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recent Posts</title>
      <link>https://chasemc.github.io/home/posts/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/home/posts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://chasemc.github.io/home/projects/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/home/projects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tags</title>
      <link>https://chasemc.github.io/home/tags/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 -0500</pubDate>
      
      <guid>https://chasemc.github.io/home/tags/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://chasemc.github.io/home/contact/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/home/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Beyond Rstats -&gt; Rgames</title>
      <link>https://chasemc.github.io/post/pong-in-r/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/post/pong-in-r/</guid>
      <description>&lt;p&gt;While R is traditionally an academically-oriented language (usually statistics) it has moved into some kind of grey-zone due to inclusive philosophies and an abundance of new packages.&lt;/p&gt;
&lt;p&gt;Thinking about this recently, I wondered if anyone had written any interactive games in R- and the answer is “kind-of”. About 2 years ago, Shiny afficionado Dean Attali wrote an &lt;a href=&#34;https://deanattali.com/blog/shiny-game-lightsout/&#34;&gt;interactive game&lt;/a&gt;, which is interactive but still lacked dynamic movement of a piece/character, charactestic of many games.&lt;/p&gt;
&lt;p&gt;After another brief search I came across Peter Prevos’ &lt;a href=&#34;https://www.r-bloggers.com/r-cade-games-simulating-the-legendary-game-of-pong&#34;&gt;post in r-bloggers&lt;/a&gt; about pong in R. I thought that was it, my search was done! But a closer look at the title revealed that while he had “simulated” the game, he had yet to accomplish interactivity.&lt;/p&gt;
&lt;p&gt;So here’s my proof of concept, super-glitchy, 10-min of coding attempt of a truly interactive game of Pong in R, using Shiny, dplyr, and ggvis. I had extended this to a game similar to Google dino-game easter egg (eg &lt;a href=&#34;http://www.trex-game.skipser.com&#34;&gt;here&lt;/a&gt;)…but that seems to be on my other computer, or maybe I just dreamt that… so maybe another day, another post. :)&lt;/p&gt;
&lt;p&gt;Feel free to modify this code into an actual full-fledged game if you are so inclined. Peters’ &lt;a href=&#34;https://www.r-bloggers.com/r-cade-games-simulating-the-legendary-game-of-pong&#34;&gt;post&lt;/a&gt; even gives some ideas of incorporating sound and how to handle when the paddle misses/adding levels/and a “Game Over” screen.&lt;/p&gt;
&lt;p&gt;Yeah, there’s currently no winner, the ball moves slowly, it might be a bit jumpy, I probably used the wrong syntax… let’s see your best, make it better… game on!&lt;/p&gt;
&lt;p&gt;An online version can be found here: &lt;a href=&#34;https://chasemc.shinyapps.io/PONG&#34;&gt;chasemc.shinyapps.io/PONG&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Code is very loosely based on https://www.r-bloggers.com/r-cade-games-simulating-the-legendary-game-of-pong/

library(shiny)
library(ggvis)
library(dplyr)

# Playing field boundary lines
boundaries &amp;lt;- tibble(x = c(0, 50, 50, 0), y = c(0, 0, 50, 50))
paddleHeight &amp;lt;- tibble(x = c(0, 0), y = c(10, 20))

# Playing field boundaries (depend on cex)
xmin &amp;lt;- 0
xmax &amp;lt;- 50
ymin &amp;lt;- 0
ymax &amp;lt;- 50

# Initial position
initialBallPosition &amp;lt;&amp;lt;- tibble(x=40,y=40)

# Paddle control
psize &amp;lt;- 4
ypaddle &amp;lt;- 4
paddleSpeed &amp;lt;- 3

# Set direction
dx &amp;lt;- runif(1, .5, 1)
dy &amp;lt;- runif(1, .5, 1) 

ui &amp;lt;- 
  fluidPage(
    column(width=3),
    column(width=6,
           h1(&amp;quot;PONG in R: A Proof of Concept&amp;quot;),
           
           actionButton(&amp;quot;reset&amp;quot;,&amp;quot;Reset&amp;quot;),
           ggvisOutput(&amp;quot;p&amp;quot;),
           # The following code was modified based on https://stackoverflow.com/questions/24973549/r-shiny-key-input-binding
           tags$style(type=&amp;quot;text/css&amp;quot;, &amp;quot;.recalculating {opacity: 1.0;}&amp;quot;),
           tags$script(&amp;#39;$(document).on(&amp;quot;keydown&amp;quot;, function (e) {
                       Shiny.onInputChange(&amp;quot;mydata&amp;quot;, [e.which, Math.random()]  );
                       });&amp;#39;)  
    ),column(width=3)
    )

server &amp;lt;- function(input,output,session) {
  
  observeEvent(input$reset,{
  initialBallPosition &amp;lt;&amp;lt;- tibble(x=40,y=40)
  })
  
  # Update paddle position based on keyboard input  
  # Key map  
  # left  = 37
  # right = 39
  # up ter   = 38
  # down  = 40
  
  observeEvent(input$mydata,{
    if((is.null(input$mydata))){
      playerObjectInitial}else{
        if(input$mydata[1] == 37){
          # left arrow key is empty
        }else if(input$mydata[1] == 39){
          # right arrow key is empty
        }else if(input$mydata[1] == 38 &amp;amp;&amp;amp; max(paddleHeight$y) &amp;lt; ymax - paddleSpeed){
          paddleHeight &amp;lt;&amp;lt;- paddleHeight %&amp;gt;% mutate(y=y+paddleSpeed)
        }else if(input$mydata[1] == 40 &amp;amp;&amp;amp; min(paddleHeight$y) &amp;gt; ymin + paddleSpeed){
          paddleHeight &amp;lt;&amp;lt;-   paddleHeight %&amp;gt;% mutate(y=y-paddleSpeed)
        }
      }
  })
  
  paddleMove &amp;lt;- reactive({
    invalidateLater(100)
    paddleHeight
  })
  
  ballPosition &amp;lt;- reactive({
    
    invalidateLater(200)
    
    if (initialBallPosition$x &amp;gt; xmax ) {
      dx &amp;lt;&amp;lt;- -dx * runif(1, .9, 1.1) # Bounce 
      initialBallPosition &amp;lt;&amp;lt;- initialBallPosition %&amp;gt;% mutate(x = x + dx)
    }else if (initialBallPosition$y &amp;gt; ymax | initialBallPosition$y &amp;lt; ymin){
      dy &amp;lt;&amp;lt;- -dy * runif(1, .9, 1.1)
      initialBallPosition &amp;lt;&amp;lt;- initialBallPosition %&amp;gt;% mutate(y = y + dy)
    }else if((initialBallPosition$x &amp;lt; xmin+.1) &amp;amp;&amp;amp; (initialBallPosition$y &amp;gt; min(paddleHeight$y) &amp;amp;&amp;amp; initialBallPosition$y &amp;lt; max(paddleHeight$y)) ){
      dx &amp;lt;&amp;lt;- -dx * runif(1, .9, 1.1) # Bounce 
      initialBallPosition &amp;lt;&amp;lt;- initialBallPosition %&amp;gt;% mutate(x = x + dx)
    }else{
      initialBallPosition &amp;lt;- initialBallPosition %&amp;gt;% mutate(y = y + dy)
      initialBallPosition &amp;lt;- initialBallPosition %&amp;gt;% mutate(x = x + dx)
      initialBallPosition &amp;lt;&amp;lt;- initialBallPosition
    }
    
    initialBallPosition 
  })
  
  ggvis(x = ~x, y = ~y) %&amp;gt;% 
    
    layer_points(data=ballPosition,size:=100) %&amp;gt;% 
    layer_paths(data=boundaries) %&amp;gt;% 
    layer_paths(data=paddleMove, stroke := &amp;quot;red&amp;quot;,strokeWidth := 5) %&amp;gt;% 
    scale_numeric( &amp;quot;x&amp;quot;, domain = c(0,50)) %&amp;gt;% 
    scale_numeric( &amp;quot;y&amp;quot;, domain = c(0,50)) %&amp;gt;%
    hide_axis(scale = &amp;quot;x&amp;quot;) %&amp;gt;%
    hide_axis(scale = &amp;quot;y&amp;quot;) %&amp;gt;% 
    bind_shiny(&amp;quot;p&amp;quot;)
  
}

# Run the application 
shinyApp(ui = ui, server = server)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>A Shiny New World</title>
      <link>https://chasemc.github.io/post/a-shiny-new-world/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/post/a-shiny-new-world/</guid>
      <description>&lt;p&gt;Disclaimer (and maybe dissapointment): This has no connection to Huxley’s dystopian.&lt;/p&gt;
&lt;div id=&#34;jump-to-section&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Jump to Section:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Brief Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exampleone&#34;&gt;Example Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#code&#34;&gt;Code and Presentation Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#refs&#34;&gt;Resources for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;intro&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I recently gave a &lt;a href=&#34;https://github.com/chasemc/Jan2018ShinyMeetupCRUG/blob/master/CRUG-Jan-2018-Presentation.pdf&#34;&gt;talk&lt;/a&gt; at a meetup in Chicago about an R Shiny app I am working on called &lt;a href=&#34;https://chasemc.github.io/IDBac&#34;&gt;IDBac&lt;/a&gt;. While there are &lt;a href=&#34;https://shiny.rstudio.com/gallery&#34;&gt;plenty of example apps&lt;/a&gt; for Shiny I also wanted to create some examples of my own for now and any future instruction. Since the meetup had some scheduled time for attendees to work in groups or on their own I thought a nice demonstration of Shiny would be an app that could interactively create groups based on a self-reported skill level.&lt;/p&gt;
&lt;p&gt;However I also wanted to include some introductory-type apps to cover a range of beginner to intermediate skill levels. So, in all, there are three suggested apps to look through, hopefully with each stepping up a degree in skill level needed for both data-wrangling and Shiny skills. Some links to tutorials and resources can be found at the end of the post.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;App One
&lt;ul&gt;
&lt;li&gt;Was borrowed from RStudio’s example gallery and should be straightforward enough to learn some of the basics of Shiny as you go through tutorials.
&lt;ul&gt;
&lt;li&gt;Skills: simple data analysis, simple clustering, simple plotting with base R&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;App Two
&lt;ul&gt;
&lt;li&gt;Is based on the GapMinder dataset and includes two static ggplots and an interactive datatable.
&lt;ul&gt;
&lt;li&gt;Skills: simple data analysis, simple plotting with ggplot&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;App Three
&lt;ul&gt;
&lt;li&gt;Is the demonstration app on splitting Meetup attendees into groups. It uses googlesheets, jsonlite to parse API responses, and some more advanced data analysis (both purrr and lapply) and building a dynamic nested HTML table in Shiny.
&lt;ul&gt;
&lt;li&gt;Skills: Parsing API and JSON, googlesheets,dplyr, purrr (map), lapply, dynamic html tags in Shiny There are some challenges/suggestions included in each of the apps.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;exampleone&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;app-one-beginner-example&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;App One: Beginner Example&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://chasemc.github.io/img/post/2018-01-28-a-shiny-new-world/BeginnerExample.PNG&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;I find Joe Cheng’s &lt;a href=&#34;https://shiny.rstudio.com/gallery/kmeans-example.html&#34;&gt;k-means example&lt;/a&gt; to be pretty straightforward to point out the basic features of reactivity and chose this as challenge for beginner’s to get familiar with shiny. Trying to understand what happens when you “break” certain lines of the code and why inputs, outputs, and reactives are placed where they are.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;app-two-and-three-beginnerintermediate-examples&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;App Two and Three: Beginner/Intermediate Examples&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;app-two-plotting-gapminder-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;App Two: Plotting GapMinder Data&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://chasemc.github.io/img/post/2018-01-28-a-shiny-new-world/Beginner-Intermediate.PNG&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;This example is pretty short and simple with an interactive dataframe and two static ggplots within three separate tabPanels.&lt;/p&gt;
&lt;p&gt;There are some challenges/suggestions on the left side of the page. These include making the ggplots interactive.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;app-three-interactively-create-groups-at-a-meetup&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;App Three: Interactively Create Groups at a Meetup&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://chasemc.github.io/img/post/2018-01-28-a-shiny-new-world/MeetupParticipantGrouping.PNG&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Due to some technical difficulties with the display tech at the meetup I wasn’t able to present this app example since I was using a computer sans-R, but wanted to include it here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Imagine:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You’re organizing an Rstats workshop through Meetup.com. You have a lot of participants and want to separate them into groups based on self-reported skill levels, how would you accomplish this with Shiny?&lt;/p&gt;
&lt;p&gt;Of course there are many ways, but the simplest I thought of was to use Google Forms and connect responses to information retrieved from the Meetup.com API.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;First, you would need to setup a Google Form and send it to participants to fill out: Example Google Form &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSeVWtyhgmZ4V1AEAJkpuMet2r0XtgJLnTDq9lbWscLRRTU_Gg/viewform?usp=pp_url&amp;amp;entry.610887169=E.g.+Jane+Doe&#34;&gt;here&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;The responses will be recorded into a Google Sheet.
&lt;ul&gt;
&lt;li&gt;For more information on using Google Sheets with R, please see Jenny Bryan and Joanna Zhao’s &lt;a href=&#34;https://rawgit.com/jennybc/googlesheets/master/vignettes/basic-usage.html&#34;&gt;tutorial.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Copy the key for the Google Sheet (eg in bold below below)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/&#34; class=&#34;uri&#34;&gt;https://docs.google.com/spreadsheets/d/&lt;/a&gt; &lt;strong&gt;1xxtw88dEKDdQ1CoeLm46FWmNt3bqPSCGp4P7LA7BNv0&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Find the code snippet below within the shiny app and replace “Insert Key Here” with your key&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;responses &amp;lt;- reactive({
      surveyResponses &amp;lt;- gs_key(&amp;quot; Insert Key Here &amp;quot;)
      surveyResponses %&amp;gt;%  gs_read(ws = &amp;quot;Form Responses 1&amp;quot;)
      
  }) &lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Then create the json API GET request for your Meetup.com event. To do so you would go &lt;a href=&#34;https://secure.meetup.com/meetup_api/console/?path=/:urlname/events/:event_id/rsvps&#34;&gt;here&lt;/a&gt;, fill out the form, create the API, and copy the Signed URL that is created.
&lt;ul&gt;
&lt;li&gt;Find the code snippet below within the Shiny app and replace “Insert Signed URL Here” with your signed url.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;listFromAPI&amp;lt;-read_json(&amp;quot; Insert Signed URL Here &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;div id=&#34;code&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-apps-code-and-chicago-r-user-group-presentation-slides&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Shiny Apps Code and Chicago R User Group Presentation Slides&lt;/h2&gt;
&lt;p&gt;All three examples, and my presentation, are available on github at: &lt;a href=&#34;https://github.com/chasemc/Jan2018ShinyMeetupCRUG&#34;&gt;github.com/chasemc/Jan2018ShinyMeetupCRUG&lt;/a&gt; or by download as a package with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Install devtools if you haven&amp;#39;t already
# install.packages(devtools)
devtools::install_github(&amp;quot;chasemc/Jan2018ShinyMeetupCRUG&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All three apps are released under the &lt;a href=&#34;https://www.r-project.org/Licenses/MIT&#34;&gt;MIT License.&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;refs&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;resources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Where to start:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://swirlstats.com&#34;&gt;swirlstats.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://r4ds.had.co.nz&#34;&gt;r4ds.had.co.nz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Then move on to: &lt;a href=&#34;http://adv-r.had.co.nz&#34;&gt;adv-r.had.co.nz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Where to find answers to your questions:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackexchange.com&#34;&gt;stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.rstudio.com&#34;&gt;community.rstudio.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web Search! (i.e. &lt;a href=&#34;https://google.com&#34;&gt;google.com&lt;/a&gt;)
&lt;ul&gt;
&lt;li&gt;E.g. (search: convert list to data frame in R)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And for those new to Shiny:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A few Shiny resources:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/tutorial&#34;&gt;shiny.rstudio.com/tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/articles&#34;&gt;shiny.rstudio.com/articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/gallery&#34;&gt;shiny.rstudio.com/gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/gallery/widget-gallery.html&#34;&gt;shiny.rstudio.com/gallery/widget-gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://deanattali.com/blog/building-shiny-apps-tutorial&#34;&gt;deanattali.com/blog/building-shiny-apps-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Coupling MALDI-TOF mass spectrometry protein and specialized metabolite analyses to rapidly discriminate bacterial function</title>
      <link>https://chasemc.github.io/publication/idbac1/</link>
      <pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://chasemc.github.io/publication/idbac1/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IDBac: A Shiny App to Analyze Bacterial Fingerprints and Aid in the Discovery of Potential New Antibiotics</title>
      <link>https://chasemc.github.io/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0600</pubDate>
      
      <guid>https://chasemc.github.io/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>